type User @entity {
  id: ID
  address: Bytes
  tokenContracts: [TokenContractUser!] @derivedFrom(field: "user")
}

type TokenContract @entity {
  id: ID
  address: Bytes
}

type Token @entity {
  id: ID
  tokenId: BigInt
  tokenContractAddress: Bytes
  tokenContract: TokenContract
  tokenTransactions: [TokenTransaction!] @derivedFrom(field: "token")
  owner: User
  ownerAddress: Bytes
}

# Represents owned tokens by user
type TokenContractUser @entity {
  id: ID
  tokenContract: TokenContract
  user: User
  userAddress: Bytes
  tokens: [Token!]
}

type TokenTransaction @entity {
  id: ID # tokenId + TransactionId
  token: Token
  tokenId: BigInt
  transaction: Transaction
  transactionId: ID
}

type Transaction @entity {
  id: ID
  sender: User
  senderAddress: Bytes

  receiver: User
  receiverAddress: Bytes

  gasUsed: BigInt
  gasPrice: BigInt
  gasLimit: BigInt

  tokenTransactions: TokenTransaction @derivedFrom(field: "transaction")
}
